{"version":3,"sources":["../node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","../node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","../node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","../node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","views/base/tables/defaultUsersData.js","views/base/tables/Tables.js"],"names":["_arrayLikeToArray","arr","len","length","i","arr2","Array","_unsupportedIterableToArray","o","minLen","n","Object","prototype","toString","call","slice","constructor","name","from","test","_toConsumableArray","isArray","iter","Symbol","iterator","TypeError","_slicedToArray","_i","_s","_e","_arr","_n","_d","next","done","push","value","err","defaultUsersData","id","registered","role","status","Tables","usersDataTemp","sort","a","b","nameA","toUpperCase","nameB","useState","details","setDetails","usersData","setUsersData","hidden","setHidden","hiddenEdit","setHiddenEdit","setName","setRole","setStatus","nameEdit","setNameEdit","roleEdit","setRoleEdit","statusEdit","setStatusEdit","toggleDetails","index","position","indexOf","newDetails","splice","getBadge","size","color","className","onClick","window","location","reload","show","placeholder","required","onChange","e","target","defaultValue","today","Date","dd","String","getDate","padStart","mm","getMonth","yyyy","getFullYear","alert","pushedObject","addHandler","items","fields","key","_style","width","label","sorter","filter","tableFilter","footer","itemsPerPageSelect","itemsPerPage","hover","pagination","sortable","scopedSlots","item","variant","shape","includes","username","my","obj","Math","random","deleteUser","editedName","editedRole","editedStatus","pushedObjectEdit","map","find","console","log","editHandler"],"mappings":"kJAAe,SAASA,EAAkBC,EAAKC,IAClC,MAAPA,GAAeA,EAAMD,EAAIE,UAAQD,EAAMD,EAAIE,QAE/C,IAAK,IAAIC,EAAI,EAAGC,EAAO,IAAIC,MAAMJ,GAAME,EAAIF,EAAKE,IAC9CC,EAAKD,GAAKH,EAAIG,GAGhB,OAAOC,CACT,CCPe,SAASE,EAA4BC,EAAGC,GACrD,GAAKD,EAAL,CACA,GAAiB,kBAANA,EAAgB,OAAO,EAAiBA,EAAGC,GACtD,IAAIC,EAAIC,OAAOC,UAAUC,SAASC,KAAKN,GAAGO,MAAM,GAAI,GAEpD,MADU,WAANL,GAAkBF,EAAEQ,cAAaN,EAAIF,EAAEQ,YAAYC,MAC7C,QAANP,GAAqB,QAANA,EAAoBJ,MAAMY,KAAKV,GACxC,cAANE,GAAqB,2CAA2CS,KAAKT,GAAW,EAAiBF,EAAGC,QAAxG,CALc,CAMhB,CCJe,SAASW,EAAmBnB,GACzC,OCJa,SAA4BA,GACzC,GAAIK,MAAMe,QAAQpB,GAAM,OAAO,EAAiBA,EAClD,CDES,CAAkBA,IELZ,SAA0BqB,GACvC,GAAsB,qBAAXC,QAAmD,MAAzBD,EAAKC,OAAOC,WAA2C,MAAtBF,EAAK,cAAuB,OAAOhB,MAAMY,KAAKI,EACtH,CFGmC,CAAgBrB,IAAQ,EAA2BA,IGLvE,WACb,MAAM,IAAIwB,UAAU,uIACtB,CHG8F,EAC9F,CIFe,SAASC,EAAezB,EAAKG,GAC1C,OCLa,SAAyBH,GACtC,GAAIK,MAAMe,QAAQpB,GAAM,OAAOA,CACjC,CDGS,CAAeA,IELT,SAA+BA,EAAKG,GACjD,IAAIuB,EAAY,MAAP1B,EAAc,KAAyB,qBAAXsB,QAA0BtB,EAAIsB,OAAOC,WAAavB,EAAI,cAE3F,GAAU,MAAN0B,EAAJ,CACA,IAIIC,EAAIC,EAJJC,EAAO,GACPC,GAAK,EACLC,GAAK,EAIT,IACE,IAAKL,EAAKA,EAAGb,KAAKb,KAAQ8B,GAAMH,EAAKD,EAAGM,QAAQC,QAC9CJ,EAAKK,KAAKP,EAAGQ,QAEThC,GAAK0B,EAAK3B,SAAWC,GAH4B2B,GAAK,GAc9D,CATE,MAAOM,GACPL,GAAK,EACLH,EAAKQ,CACP,CAAE,QACA,IACON,GAAsB,MAAhBJ,EAAW,QAAWA,EAAW,QAG9C,CAFE,QACA,GAAIK,EAAI,MAAMH,CAChB,CACF,CAEA,OAAOC,CAxBe,CAyBxB,CFvBgC,CAAqB7B,EAAKG,IAAM,EAA2BH,EAAKG,IGLjF,WACb,MAAM,IAAIqB,UAAU,4IACtB,CHGsG,EACtG,C,2BIsBea,EA5BU,CACrB,CAACC,GAAI,EAAGtB,KAAM,WAAYuB,WAAY,aAAcC,KAAM,QAASC,OAAQ,WAC3E,CAACH,GAAI,EAAGtB,KAAM,cAAeuB,WAAY,aAAcC,KAAM,SAAUC,OAAQ,UAC/E,CAACH,GAAI,EAAGtB,KAAM,gBAAiBuB,WAAY,aAAcC,KAAM,QAASC,OAAQ,UAChF,CAACH,GAAI,EAAGtB,KAAM,iBAAkBuB,WAAY,aAAcC,KAAM,QAASC,OAAQ,YACjF,CAACH,GAAI,EAAGtB,KAAM,mBAAoBuB,WAAY,aAAcC,KAAM,SAAUC,OAAQ,WACpF,CAACH,GAAI,EAAGtB,KAAM,oBAAkBuB,WAAY,aAAcC,KAAM,QAASC,OAAQ,UACjF,CAACH,GAAI,EAAGtB,KAAM,kBAAmBuB,WAAY,aAAcC,KAAM,SAAUC,OAAQ,UACnF,CAACH,GAAI,EAAGtB,KAAM,iBAAkBuB,WAAY,aAAcC,KAAM,QAASC,OAAQ,UACjF,CAACH,GAAI,EAAGtB,KAAM,aAAcuB,WAAY,aAAcC,KAAM,QAASC,OAAQ,YAC7E,CAACH,GAAI,EAAGtB,KAAM,kBAAgBuB,WAAY,aAAcC,KAAM,SAAUC,OAAQ,WAChF,CAACH,GAAI,GAAItB,KAAM,0BAAmBuB,WAAY,aAAcC,KAAM,QAASC,OAAQ,UACnF,CAACH,GAAI,GAAItB,KAAM,iBAAkBuB,WAAY,aAAcC,KAAM,SAAUC,OAAQ,UACnF,CAACH,GAAI,GAAItB,KAAM,kBAAmBuB,WAAY,aAAcC,KAAM,QAASC,OAAQ,UACnF,CAACH,GAAI,GAAItB,KAAM,gBAAiBuB,WAAY,aAAcC,KAAM,QAASC,OAAQ,YACjF,CAACH,GAAI,GAAItB,KAAM,qBAAsBuB,WAAY,aAAcC,KAAM,SAAUC,OAAQ,WACvF,CAACH,GAAI,GAAItB,KAAM,uBAAkBuB,WAAY,aAAcC,KAAM,QAASC,OAAQ,UAClF,CAACH,GAAI,GAAItB,KAAM,mBAAiBuB,WAAY,aAAcC,KAAM,SAAUC,OAAQ,UAClF,CAACH,GAAI,GAAItB,KAAM,mBAAeuB,WAAY,aAAcC,KAAM,QAASC,OAAQ,UAC/E,CAACH,GAAI,GAAItB,KAAM,oBAAqBuB,WAAY,aAAcC,KAAM,QAASC,OAAQ,YACrF,CAACH,GAAI,GAAItB,KAAM,oBAAqBuB,WAAY,aAAcC,KAAM,SAAUC,OAAQ,WACtF,CAACH,GAAI,GAAItB,KAAM,oBAAgBuB,WAAY,aAAcC,KAAM,QAASC,OAAQ,UAChF,CAACH,GAAI,GAAItB,KAAM,iBAAkBuB,WAAY,aAAcC,KAAM,SAAUC,OAAQ,UACnF,CAACH,GAAI,GAAItB,KAAM,sBAAkBuB,WAAY,aAAcC,KAAM,QAASC,OAAQ,UAClF,CAACH,GAAI,GAAItB,KAAM,gBAAiBuB,WAAY,aAAcC,KAAM,SAAUC,OAAQ,WAClF,CAACH,GAAI,GAAItB,KAAM,eAAgBuB,WAAY,aAAcC,KAAM,QAASC,OAAQ,gB,QCiSrEC,UAxSA,WAEb,IAAIC,EAAgBN,EAAiBO,MAAK,SAACC,EAAGC,GAC5C,IAAMC,EAAQF,EAAE7B,KAAKgC,cACfC,EAAQH,EAAE9B,KAAKgC,cACrB,OAAID,EAAQE,GACF,EAENF,EAAQE,EACH,EAIF,CACR,IAED,IAA8BC,mBAAS,IAAvC,GAAOC,EAAP,KAAgBC,EAAhB,KACA,IAAkCF,mBAASP,GAA3C,GAAOU,EAAP,KAAkBC,EAAlB,KACA,IAA4BJ,oBAAS,GAArC,GAAOK,EAAP,KAAeC,EAAf,KACA,IAAoCN,oBAAS,GAA7C,GAAOO,EAAP,KAAmBC,EAAnB,KACA,IAAwBR,mBAAS,IAAjC,GAAOlC,EAAP,KAAa2C,EAAb,KACA,IAAwBT,mBAAS,IAAjC,GAAOV,EAAP,KAAaoB,EAAb,KACA,IAA4BV,mBAAS,IAArC,GAAOT,EAAP,KAAeoB,EAAf,KACA,IAAgCX,mBAAS,IAAzC,GAAOY,EAAP,KAAiBC,EAAjB,KACA,IAAgCb,mBAAS,IAAzC,GAAOc,EAAP,KAAiBC,EAAjB,KACA,IAAoCf,mBAAS,IAA7C,GAAOgB,EAAP,KAAmBC,EAAnB,KAGMC,EAAgB,SAACC,GACrB,IAAMC,EAAWnB,EAAQoB,QAAQF,GAC7BG,EAAarB,EAAQrC,SACP,IAAdwD,EACFE,EAAWC,OAAOH,EAAU,GAE5BE,EAAU,YAAOrB,GAAP,CAAgBkB,IAE5BjB,EAAWoB,EACZ,EAiBKE,EAAW,SAACjC,GAChB,OAAQA,GACN,IAAK,SAAU,MAAO,UACtB,IAAK,WAAY,MAAO,YACxB,IAAK,UAAW,MAAO,UACvB,IAAK,SAAU,MAAO,SACtB,QAAS,MAAO,UAEnB,EA2ED,OACE,mCACE,cAAC,IAAD,UACE,cAAC,IAAD,UACE,eAAC,IAAD,WACE,eAAC,IAAD,kCAEE,cAAC,IAAD,CAASkC,KAAK,KAAKC,MAAOrB,EAAS,UAAY,YAAasB,UAAU,mBAAmBC,QAAS,WAAOtB,GAAWD,EAAQ,EAA5H,SAEIA,EAAS,WAAa,WAG1B,cAAC,IAAD,CAASoB,KAAK,KAAKC,MAAM,UAAUC,UAAU,mBAAmBC,QAAS,WA5EnFC,OAAOC,SAASC,QA4EmE,EAAzE,2BAIF,cAAC,IAAD,CAAWC,MAAO3B,EAAlB,SACE,cAAC,IAAD,UACE,cAAC,IAAD,UACE,eAAC,IAAD,CAAYsB,UAAU,WAAtB,UACE,cAAC,IAAD,CAAQvC,GAAG,OAAO6C,YAAY,oBAAoBC,UAAQ,EAACC,SAAY,SAACC,GAAD,OAAO3B,EAAQ2B,EAAEC,OAAOpD,MAAxB,IACvE,eAAC,IAAD,CACAG,GAAG,OACHuC,UAAU,OACVQ,SAAY,SAACC,GAAD,OAAO1B,EAAQ0B,EAAEC,OAAOpD,MAAxB,EACZiD,UAAQ,EAJR,UAME,wBAAQI,cAAY,EAApB,gCACA,wBAAQrD,MAAM,QAAd,mBACA,wBAAQA,MAAM,SAAd,oBACA,wBAAQA,MAAM,QAAd,mBACA,wBAAQA,MAAM,QAAd,mBACA,wBAAQA,MAAM,QAAd,sBAEF,eAAC,IAAD,CACAG,GAAG,SACHuC,UAAU,OACVQ,SAAY,SAACC,GAAD,OAAOzB,EAAUyB,EAAEC,OAAOpD,MAA1B,EACZiD,UAAQ,EAJR,UAME,wBAAQI,cAAY,EAApB,kCACA,wBAAQrD,MAAM,SAAd,oBACA,wBAAQA,MAAM,UAAd,qBACA,wBAAQA,MAAM,WAAd,sBACA,wBAAQA,MAAM,SAAd,oBACA,wBAAQA,MAAM,cAAd,4BAEF,cAAC,IAAD,CAASwC,KAAK,KAAKC,MAAM,UAAUC,UAAU,mBAAmBC,QAAS,kBA5GxE,WACjB,IAAIW,EAAQ,IAAIC,KACZC,EAAKC,OAAOH,EAAMI,WAAWC,SAAS,EAAG,KACzCC,EAAKH,OAAOH,EAAMO,WAAa,GAAGF,SAAS,EAAG,KAC9CG,EAAOR,EAAMS,cAIjB,GAFAT,EAAQM,EAAK,IAAMJ,EAAK,IAAMM,EAEpB,KAAPjF,GAAkB,KAAPwB,GAAoB,KAATC,EACvB0D,MAAM,2DACH,CACH,IAAIC,EAAe,CACjB9D,GAAIe,EAAUnD,OAAO,EACrBc,KAAMA,EACNuB,WAAYkD,EACZjD,KAAMA,EACNC,OAAQA,GAEVY,EAAUnB,KAAKkE,GACfzC,EAAQ,IACRC,EAAQ,IACRC,EAAU,IACVL,GAAU,GACV2C,MAAM,8BACP,CACF,CAmFgGE,EAAN,EAAzE,kCAOR,cAAC,IAAD,UACE,cAAC,IAAD,CACEC,MAAOjD,EACPkD,OA1JC,CACb,CAAEC,IAAK,OAAQC,OAAQ,CAAEC,MAAO,QAChC,aACA,CAAEF,IAAK,OAAQC,OAAQ,CAAEC,MAAO,QAChC,CAAEF,IAAK,SAAUC,OAAQ,CAAEC,MAAO,QAClC,CACEF,IAAK,eACLG,MAAO,GACPF,OAAQ,CAAEC,MAAO,MACjBE,QAAQ,EACRC,QAAQ,IAiJEC,aAAW,EACXC,QAAM,EACNC,oBAAkB,EAClBC,aAAc,EACdC,OAAK,EACLC,YAAU,EACVC,UAAQ,EACRC,YAAe,CACb,OACE,SAACC,GAAD,OACE,6BACE,cAAC,IAAD,CAAQ1C,MAAOF,EAAS4C,EAAK7E,QAA7B,SACG6E,EAAK7E,UAHZ,EAOF,aACE,SAAC6E,EAAMjD,GACL,OACE,oBAAIQ,UAAU,OAAd,SACE,cAAC,IAAD,CACED,MAAM,UACN2C,QAAQ,UACRC,MAAM,SACN7C,KAAK,KACLG,QAAS,WAAKV,EAAcC,EAAO,EALrC,SAOGlB,EAAQsE,SAASpD,GAAS,SAAW,aAI7C,EACH,QACI,SAACiD,EAAMjD,GACL,OACA,cAAC,IAAD,CAAWa,KAAM/B,EAAQsE,SAASpD,GAAlC,SACE,eAAC,IAAD,WACE,6BACGiD,EAAKI,WAER,oBAAG7C,UAAU,aAAb,yBAAuCyC,EAAK/E,cAC5C,cAAC,IAAD,CAASoC,KAAK,KAAKC,MAAM,OAAOE,QAAS,kBAAMpB,GAAeD,EAArB,EAAzC,SAEEA,EAAa,OAAS,WAGxB,cAAC,IAAD,CAASkB,KAAK,KAAKC,MAAM,SAASC,UAAU,OAAOC,QAAS,kBAjLnE,SAACwC,GAClB,IAAIK,EAAKtE,EAAUwD,QAAO,SAAUe,GAClC,OAAOA,EAAItF,KAAOgF,EAAKhF,EACxB,IACDgB,EAAaqE,GACbvD,EAAcyD,KAAKC,SAASzE,EAAUnD,OAAO,EAC9C,CA2KyF6H,CAAWT,EAAf,EAA5D,oBAGA,cAAC,IAAD,CAAWpC,MAAOzB,EAAlB,SACE,cAAC,IAAD,UACE,cAAC,IAAD,UACE,eAAC,IAAD,CAAYoB,UAAU,OAAtB,UACE,cAAC,IAAD,CAAQvC,GAAG,OAAO6C,YAAamC,EAAKtG,KAAMoE,UAAQ,EAACC,SAAY,SAACC,GAAD,OAAOvB,EAAYuB,EAAEC,OAAOpD,MAA5B,IAC/D,eAAC,IAAD,CACAG,GAAG,OACHuC,UAAU,OACVQ,SAAY,SAACC,GAAD,OAAOrB,EAAYqB,EAAEC,OAAOpD,MAA5B,EACZiD,UAAQ,EAJR,UAME,yBAAQI,cAAY,EAApB,6BAAsC8B,EAAK9E,QAC3C,wBAAQL,MAAM,QAAd,mBACA,wBAAQA,MAAM,SAAd,oBACA,wBAAQA,MAAM,QAAd,mBACA,wBAAQA,MAAM,QAAd,mBACA,wBAAQA,MAAM,QAAd,sBAEF,eAAC,IAAD,CACAG,GAAG,SACHuC,UAAU,OACVQ,SAAY,SAACC,GAAD,OAAOnB,EAAcmB,EAAEC,OAAOpD,MAA9B,EACZiD,UAAQ,EAJR,UAME,yBAAQI,cAAY,EAApB,+BAAwC8B,EAAK7E,UAC7C,wBAAQN,MAAM,SAAd,oBACA,wBAAQA,MAAM,UAAd,qBACA,wBAAQA,MAAM,WAAd,sBACA,wBAAQA,MAAM,SAAd,oBACA,wBAAQA,MAAM,cAAd,4BAEF,cAAC,IAAD,CAASwC,KAAK,KAAKC,MAAM,UAAUC,UAAU,mBAAmBC,QAAS,kBA5KvF,SAACwC,GACnB,IAAIU,EAAaV,EAAKtG,KAClBiH,EAAaX,EAAK9E,KAClB0F,EAAeZ,EAAK7E,OAER,KAAbqB,IACDkE,EAAalE,GAEC,KAAbE,IACDiE,EAAajE,GAEG,KAAfE,IACDgE,EAAehE,GAGjB,IAAIiE,EAAmB,CAAC,CACtB7F,GAAIgF,EAAKhF,GACTtB,KAAMgH,EACNzF,WAAY+E,EAAK/E,WACjBC,KAAMyF,EACNxF,OAAQyF,IAGV5E,EAAaD,EAAU+E,KAAI,SAAAR,GAAG,OAAIO,EAAiBE,MAAK,SAAA9H,GAAC,OAAIA,EAAE+B,KAAOsF,EAAItF,EAAjB,KAAwBsF,CAAnD,KAE9B7D,EAAY,IACZE,EAAY,IACZE,EAAc,IACdT,GAAc,GACdU,EAAcyD,KAAKC,SAASzE,EAAUnD,OAAO,GAC7CiG,MAAM,+BACNmC,QAAQC,IAAIlF,EACb,CA4IgHmF,CAAYlB,EAAlB,EAAzE,sCAUf,eASpB,C","file":"static/js/5.f343f752.chunk.js","sourcesContent":["export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","import arrayWithoutHoles from \"./arrayWithoutHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableSpread from \"./nonIterableSpread.js\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import arrayWithHoles from \"./arrayWithHoles.js\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableRest from \"./nonIterableRest.js\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"];\n\n  if (_i == null) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n\n  var _s, _e;\n\n  try {\n    for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","const defaultUsersData = [\r\n    {id: 0, name: 'John Doe', registered: '2018/01/01', role: 'Guest', status: 'Pending'},\r\n    {id: 1, name: 'Samppa Nori', registered: '2018/01/01', role: 'Member', status: 'Active'},\r\n    {id: 2, name: 'Estavan Lykos', registered: '2018/02/01', role: 'Staff', status: 'Banned'},\r\n    {id: 3, name: 'Chetan Mohamed', registered: '2018/02/01', role: 'Admin', status: 'Inactive'},\r\n    {id: 4, name: 'Derick Maximinus', registered: '2018/03/01', role: 'Member', status: 'Pending'},\r\n    {id: 5, name: 'Friderik Dávid', registered: '2018/01/21', role: 'Staff', status: 'Active'},\r\n    {id: 6, name: 'Yiorgos Avraamu', registered: '2018/01/01', role: 'Member', status: 'Active'},\r\n    {id: 7, name: 'Avram Tarasios', registered: '2018/02/01', role: 'Staff', status: 'Banned'},\r\n    {id: 8, name: 'Quintin Ed', registered: '2018/02/01', role: 'Admin', status: 'Inactive'},\r\n    {id: 9, name: 'Enéas Kwadwo', registered: '2018/03/01', role: 'Member', status: 'Pending'},\r\n    {id: 10, name: 'Agapetus Tadeáš', registered: '2018/01/21', role: 'Staff', status: 'Active'},\r\n    {id: 11, name: 'Carwyn Fachtna', registered: '2018/01/01', role: 'Member', status: 'Active'},\r\n    {id: 12, name: 'Nehemiah Tatius', registered: '2018/02/01', role: 'Staff', status: 'Banned'},\r\n    {id: 13, name: 'Ebbe Gemariah', registered: '2018/02/01', role: 'Admin', status: 'Inactive'},\r\n    {id: 14, name: 'Eustorgios Amulius', registered: '2018/03/01', role: 'Member', status: 'Pending'},\r\n    {id: 15, name: 'Leopold Gáspár', registered: '2018/01/21', role: 'Staff', status: 'Active'},\r\n    {id: 16, name: 'Pompeius René', registered: '2018/01/01', role: 'Member', status: 'Active'},\r\n    {id: 17, name: 'Paĉjo Jadon', registered: '2018/02/01', role: 'Staff', status: 'Banned'},\r\n    {id: 18, name: 'Micheal Mercurius', registered: '2018/02/01', role: 'Admin', status: 'Inactive'},\r\n    {id: 19, name: 'Ganesha Dubhghall', registered: '2018/03/01', role: 'Member', status: 'Pending'},\r\n    {id: 20, name: 'Hiroto Šimun', registered: '2018/01/21', role: 'Staff', status: 'Active'},\r\n    {id: 21, name: 'Vishnu Serghei', registered: '2018/01/01', role: 'Member', status: 'Active'},\r\n    {id: 22, name: 'Zbyněk Phoibos', registered: '2018/02/01', role: 'Staff', status: 'Banned'},\r\n    {id: 23, name: 'Aulus Agmundr', registered: '2018/01/01', role: 'Member', status: 'Pending'},\r\n    {id: 42, name: 'Ford Prefect', registered: '2001/05/25', role: 'Alien', status: 'Dont panic!'}\r\n]\r\n\r\nexport default defaultUsersData","import React, {useState} from 'react'\nimport {\n  CBadge,\n  CButton,\n  CCard,\n  CCardBody,\n  CCardHeader,\n  CCol,\n  CCollapse,\n  CDataTable,\n  CFormGroup,\n  CInput,\n  CRow,\n  CSelect,\n  CForm\n} from '@coreui/react'\nimport defaultUsersData from './defaultUsersData'\n\nconst Tables = () => {\n\n  let usersDataTemp = defaultUsersData.sort((a, b) => {\n    const nameA = a.name.toUpperCase(); // ignore upper and lowercase\n    const nameB = b.name.toUpperCase(); // ignore upper and lowercase\n    if (nameA < nameB) {\n      return -1;\n    }\n    if (nameA > nameB) {\n      return 1;\n    }\n  \n    // names must be equal\n    return 0;\n  })\n\n  const [details, setDetails] = useState([])\n  const [usersData, setUsersData] = useState(usersDataTemp)\n  const [hidden, setHidden] = useState(true)\n  const [hiddenEdit, setHiddenEdit] = useState(true)\n  const [name, setName] = useState('')\n  const [role, setRole] = useState('')\n  const [status, setStatus] = useState('')\n  const [nameEdit, setNameEdit] = useState('')\n  const [roleEdit, setRoleEdit] = useState('')\n  const [statusEdit, setStatusEdit] = useState('')\n  // const [items, setItems] = useState(usersData)\n\n  const toggleDetails = (index) => {\n    const position = details.indexOf(index)\n    let newDetails = details.slice()\n    if (position !== -1) {\n      newDetails.splice(position, 1)\n    } else {\n      newDetails = [...details, index]\n    }\n    setDetails(newDetails)\n  }\n\n\n  const fields = [\n    { key: 'name', _style: { width: '40%'} },\n    'registered',\n    { key: 'role', _style: { width: '20%'} },\n    { key: 'status', _style: { width: '20%'} },\n    {\n      key: 'show_details',\n      label: '',\n      _style: { width: '1%' },\n      sorter: false,\n      filter: false\n    }\n  ]\n\n  const getBadge = (status)=>{\n    switch (status) {\n      case 'Active': return 'success'\n      case 'Inactive': return 'secondary'\n      case 'Pending': return 'warning'\n      case 'Banned': return 'danger'\n      default: return 'primary'\n    }\n  }\n\n  const deleteUser = (item) => {\n    let my = usersData.filter(function( obj ) {\n      return obj.id !== item.id;\n    });\n    setUsersData(my);\n    toggleDetails(Math.random()*usersData.length-1);\n  }\n\n  const resetUser = () => {\n    window.location.reload();\n  }\n\n  const addHandler = () => {\n    let today = new Date();\n    let dd = String(today.getDate()).padStart(2, '0');\n    let mm = String(today.getMonth() + 1).padStart(2, '0'); //January is 0!\n    let yyyy = today.getFullYear();\n\n    today = mm + '/' + dd + '/' + yyyy;\n\n    if(name===''||role===''||status===''){\n      alert('Please fill and select all fields before submitting')\n    }else{\n      let pushedObject = {\n        id: usersData.length+1,\n        name: name,\n        registered: today,\n        role: role,\n        status: status\n      }\n      usersData.push(pushedObject);\n      setName('');\n      setRole('');\n      setStatus('');\n      setHidden(true);\n      alert('Data successfully submitted')\n    }\n  }\n\n  const editHandler = (item) => {\n    let editedName = item.name;\n    let editedRole = item.role;\n    let editedStatus = item.status;\n\n    if(nameEdit !== \"\"){\n      editedName = nameEdit\n    }\n    if(roleEdit !== \"\"){\n      editedRole = roleEdit\n    }\n    if(statusEdit !== \"\"){\n      editedStatus = statusEdit\n    }\n\n    let pushedObjectEdit = [{\n      id: item.id,\n      name: editedName,\n      registered: item.registered,\n      role: editedRole,\n      status: editedStatus\n    }]\n\n    setUsersData(usersData.map(obj => pushedObjectEdit.find(o => o.id === obj.id) || obj));\n\n    setNameEdit('');\n    setRoleEdit('');\n    setStatusEdit('');\n    setHiddenEdit(true);\n    toggleDetails(Math.random()*usersData.length+1);\n    alert('Data successfully submitted');\n    console.log(usersData);\n  }\n\n  return (\n    <>\n      <CRow>\n        <CCol>\n          <CCard>\n            <CCardHeader>\n              Available Users List\n              <CButton size=\"sm\" color={hidden ? 'success' : 'secondary'} className=\"ml-1 float-right\" onClick={() => {setHidden(!hidden)}}>\n                {\n                  hidden ? 'Add Data' : 'Cancel'\n                }\n              </CButton>\n              <CButton size=\"sm\" color=\"warning\" className=\"ml-1 float-right\" onClick={() => resetUser()}>\n                Reset Data\n              </CButton>\n            </CCardHeader>\n            <CCollapse show={!hidden}>\n              <CCardBody>\n                <CForm>\n                  <CFormGroup className=\"p-2 mb-0\">\n                    <CInput id=\"name\" placeholder=\"Enter user's name\" required onChange = {(e) => setName(e.target.value)} />\n                    <CSelect\n                    id=\"role\"\n                    className=\"mt-2\"\n                    onChange = {(e) => setRole(e.target.value)}\n                    required\n                    >\n                      <option defaultValue>Select user's role</option>\n                      <option value=\"Guest\">Guest</option>\n                      <option value=\"Member\">Member</option>\n                      <option value=\"Staff\">Staff</option>\n                      <option value=\"Admin\">Admin</option>\n                      <option value=\"Alien\">Alien</option>\n                    </CSelect>\n                    <CSelect\n                    id=\"status\"\n                    className=\"mt-2\"\n                    onChange = {(e) => setStatus(e.target.value)}\n                    required\n                    >\n                      <option defaultValue>Select user's status</option>\n                      <option value=\"Active\">Active</option>\n                      <option value=\"Pending\">Pending</option>\n                      <option value=\"Inactive\">Inactive</option>\n                      <option value=\"Banned\">Banned</option>\n                      <option value=\"Dont Panic!\">Dont Panic!</option>\n                    </CSelect>\n                    <CButton size=\"sm\" color=\"success\" className=\"mt-3 float-right\" onClick={() => addHandler()}>\n                      Submit Data\n                    </CButton>\n                  </CFormGroup>\n                </CForm>\n              </CCardBody>\n            </CCollapse>\n            <CCardBody>\n              <CDataTable\n                items={usersData}\n                fields={fields}\n                tableFilter\n                footer\n                itemsPerPageSelect\n                itemsPerPage={5}\n                hover\n                pagination\n                sortable\n                scopedSlots = {{\n                  'status':\n                    (item)=>(\n                      <td>\n                        <CBadge color={getBadge(item.status)}>\n                          {item.status}\n                        </CBadge>\n                      </td>\n                    ),\n                  'show_details':\n                    (item, index)=>{\n                      return (\n                        <td className=\"py-2\">\n                          <CButton\n                            color=\"primary\"\n                            variant=\"outline\"\n                            shape=\"square\"\n                            size=\"sm\"\n                            onClick={()=>{toggleDetails(index)}}\n                          >\n                            {details.includes(index) ? 'Cancel' : 'Options'}\n                          </CButton>\n                        </td>\n                        )\n                    },\n                  'details':\n                      (item, index)=>{\n                        return (\n                        <CCollapse show={details.includes(index)}>\n                          <CCardBody>\n                            <h4>\n                              {item.username}\n                            </h4>\n                            <p className=\"text-muted\">User since: {item.registered}</p>\n                            <CButton size=\"sm\" color=\"info\" onClick={() => setHiddenEdit(!hiddenEdit)}>\n                            {\n                              hiddenEdit ? 'Edit' : 'Cancel'\n                            }\n                            </CButton>\n                            <CButton size=\"sm\" color=\"danger\" className=\"ml-1\" onClick={()=>deleteUser(item)}>\n                              Delete\n                            </CButton>\n                            <CCollapse show={!hiddenEdit}>\n                              <CCardBody>\n                                <CForm>\n                                  <CFormGroup className=\"mb-4\">\n                                    <CInput id=\"name\" placeholder={item.name} required onChange = {(e) => setNameEdit(e.target.value)} />\n                                    <CSelect\n                                    id=\"role\"\n                                    className=\"mt-2\"\n                                    onChange = {(e) => setRoleEdit(e.target.value)}\n                                    required\n                                    >\n                                      <option defaultValue>Current role is {item.role}</option>\n                                      <option value=\"Guest\">Guest</option>\n                                      <option value=\"Member\">Member</option>\n                                      <option value=\"Staff\">Staff</option>\n                                      <option value=\"Admin\">Admin</option>\n                                      <option value=\"Alien\">Alien</option>\n                                    </CSelect>\n                                    <CSelect\n                                    id=\"status\"\n                                    className=\"mt-2\"\n                                    onChange = {(e) => setStatusEdit(e.target.value)}\n                                    required\n                                    >\n                                      <option defaultValue>Current status is {item.status}</option>\n                                      <option value=\"Active\">Active</option>\n                                      <option value=\"Pending\">Pending</option>\n                                      <option value=\"Inactive\">Inactive</option>\n                                      <option value=\"Banned\">Banned</option>\n                                      <option value=\"Dont Panic!\">Dont Panic!</option>\n                                    </CSelect>\n                                    <CButton size=\"sm\" color=\"success\" className=\"mt-3 float-right\" onClick={() => editHandler(item)}>\n                                      Submit Data\n                                    </CButton>\n                                  </CFormGroup>\n                                </CForm>\n                              </CCardBody>\n                            </CCollapse>\n                          </CCardBody>\n                        </CCollapse>\n                      )\n                    }\n                }}\n              />\n            </CCardBody>\n          </CCard>\n        </CCol>\n      </CRow>\n    </>\n  )\n}\n\nexport default Tables\n"],"sourceRoot":""}